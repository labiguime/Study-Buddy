[{"C:\\Users\\james\\Study\\client-side\\src\\index.js":"1","C:\\Users\\james\\Study\\client-side\\src\\App.js":"2","C:\\Users\\james\\Study\\client-side\\src\\reportWebVitals.js":"3","C:\\Users\\james\\Study\\client-side\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\james\\Study\\client-side\\src\\components\\WhiteBoard\\WhiteBoard.js":"5","C:\\Users\\james\\Study\\client-side\\src\\components\\IDE\\IDE.js":"6"},{"size":517,"mtime":1610235585893,"results":"7","hashOfConfig":"8"},{"size":1030,"mtime":1610244149129,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1610235585893,"results":"10","hashOfConfig":"8"},{"size":5336,"mtime":1610240969740,"results":"11","hashOfConfig":"8"},{"size":883,"mtime":1610242315358,"results":"12","hashOfConfig":"8"},{"size":184,"mtime":1610244595787,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"f258hf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\james\\Study\\client-side\\src\\index.js",[],["29","30"],"C:\\Users\\james\\Study\\client-side\\src\\App.js",["31","32"],"C:\\Users\\james\\Study\\client-side\\src\\reportWebVitals.js",[],"C:\\Users\\james\\Study\\client-side\\src\\components\\Navbar\\Navbar.js",["33","34","35","36","37","38"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({    \r\n    root: {\r\n        backgroundColor:  \"white\",\r\n        //backgroundColor:  \"#ffdd00\",\r\n    },\r\n    box: {\r\n        height: 35,\r\n        width: 250,\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n      //marginTop: theme.spacing(1),    \r\n      marginTop: 15,\r\n    }, \r\n    container: {\r\n        display: \"none\",\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n            position: 'relative', \r\n            width: 'auto'\r\n          },\r\n      marginLeft: 'auto',\r\n    },\r\n    nav: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n          display: 'flex',\r\n          width: 'auto',\r\n          justifyContent: 'center'\r\n        },\r\n    },\r\n    name: {      \r\n        color: \"black\",\r\n        \"transition\" : \"all 0.6s\",\r\n        \"font-size\" : \"26px\",\r\n        \"font-family\" : \"Cairo, sans-serif\",\r\n        \"letter-spacing\" : \"2px\",\r\n        \"text-decoration\": \"none\",\r\n        marginLeft: \"30px\",\r\n        marginRight: \"30px\",\r\n        opacity : \"1.0\",\r\n            \"&:hover\": {\r\n                opacity: \"0.6\",\r\n                \"font-size\": \"27px\"\r\n          }\r\n    },\r\n    link: {\r\n        \"text-decoration\": \"none\",\r\n    },\r\n    navBtns: {\r\n        color: 'black',\r\n        \"transition\" : \"all 0.6s\",\r\n        \"font-size\" : \"1rem\",\r\n        \"font-family\" : \"Cairo, sans-serif\",\r\n        \"letter-spacing\" : \"2px\",\r\n        \"text-transform\" : \"uppercase\",\r\n        \"text-decoration\": \"none\",\r\n        opacity : \"1.0\",\r\n        \"&:hover\": {\r\n            opacity: \"0.6\",\r\n            \"font-size\": \"1.01rem\"\r\n      }\r\n    },\r\n    drawerPaper: {\r\n      width: 250,\r\n    },\r\n  }));\r\n  \r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <AppBar className={classes.root} position=\"sticky\" color='transparent'>\r\n            <Toolbar>                    \r\n                <Grid container>\r\n                    <div className={classes.title}>\r\n                        <a className={classes.link} href=\"\">\r\n                            <Typography  className={classes.name} variant=\"h5\">Study</Typography>\r\n                        </a>        \r\n                    </div>\r\n                    <Grid item>\r\n                        <TextField className={classes.videoURL} color=\"primary\" variant=\"filled\">Video URL</TextField>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid className={classes.nav} container>\r\n                    <Grid item>\r\n                        <List className={classes.container}>                      \r\n                            \r\n                            <ListItem>\r\n                                <li><a className={classes.navBtns}>Share</a></li>\r\n                            </ListItem>\r\n                            <ListItem >\r\n                                <li><a className={classes.navBtns}>Join</a></li>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <li><a className={classes.navBtns}>User</a></li>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n               \r\n                {/* <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    edge=\"start\"\r\n                    onClick={handleDrawerToggle}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton> */}\r\n\r\n                {/* Mobile Navbar */}\r\n                {/* <Drawer\r\n                    variant=\"temporary\"\r\n                    anchor=\"right\"\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    classes={{\r\n                    paper: classes.drawerPaper,\r\n                    }}\r\n                    ModalProps={{\r\n                    keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                >\r\n                    <Paper elevation={0} className={classes.drawerPaper}>\r\n                    <Button size='small' onClick={handleDrawerToggle} style={{margin: 10}} color=\"default\">\r\n                        <CloseIcon color='primary'/>\r\n                    </Button>\r\n                        \r\n                    <List>\r\n                        <Divider />\r\n                        <ListItem>\r\n                            <li><a className={classes.navBtns}>Home</a></li>\r\n                        </ListItem>\r\n                       \r\n                    </List>\r\n                  \r\n                    </Paper>\r\n                    \r\n                </Drawer> */}\r\n            </Toolbar>\r\n        </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\james\\Study\\client-side\\src\\components\\WhiteBoard\\WhiteBoard.js",["39"],"import React from 'react';\r\nimport DrawingBoard from 'react-drawing-board';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n    draw: {\r\n        //backgroundColor:  \"#ffdd00\",\r\n    },   \r\n    grid: {\r\n        backgroundColor: 'grey',\r\n        padding: '8px',\r\n    }\r\n}))\r\n\r\nconst WhiteBoard = () => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Grid className={classes.grid} container>\r\n            \r\n            <div>\r\n                <DrawingBoard\r\n                    userId=\"User\"\r\n                    className={classes.draw}\r\n                    style={{width: '700px', height: '500px'}}\r\n                />\r\n            </div>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WhiteBoard;","C:\\Users\\james\\Study\\client-side\\src\\components\\IDE\\IDE.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":18},{"ruleId":"44","severity":1,"message":"49","line":10,"column":8,"nodeType":"46","messageId":"47","endLine":10,"endColumn":15},{"ruleId":"44","severity":1,"message":"50","line":12,"column":8,"nodeType":"46","messageId":"47","endLine":12,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":90,"column":25,"nodeType":"53","endLine":90,"endColumn":61},{"ruleId":"51","severity":1,"message":"54","line":103,"column":37,"nodeType":"53","endLine":103,"endColumn":68},{"ruleId":"51","severity":1,"message":"54","line":106,"column":37,"nodeType":"53","endLine":106,"endColumn":68},{"ruleId":"51","severity":1,"message":"54","line":109,"column":37,"nodeType":"53","endLine":109,"endColumn":68},{"ruleId":"44","severity":1,"message":"55","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":17},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'DrawingBoard' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]